version: '3.3'
services:
  mysql:
    container_name: 'mysql'
    image: 'mysql'
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: 'db_dev'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'docker'
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - es-net

  elasticsearch:
    container_name: 'elasticsearch'
    image: docker.elastic.co/elasticsearch/elasticsearch:7.11.0
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - es-net
    ports:
      - '9200:9200'
  kibana:
    container_name: 'kibana'
    image: docker.elastic.co/kibana/kibana:7.11.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    deploy:
      resources:
        limits:
          memory: 1024M
    networks:
      - es-net
    depends_on:
      - elasticsearch
    ports:
      - '5601:5601'

  logstash:
    container_name: 'logstash'
    image: logstash:8.5.0
    build:
      dockerfile: ./Dockerfile
    ports:
      - '5000:5000'
    environment:
      - LOGSTASH_JDBC_URL=jdbc:mysql://mysql:3306/db_dev
      - LOGSTASH_JDBC_DRIVER=com.mysql.cj.jdbc.Driver
      - LOGSTASH_JDBC_DRIVER_JAR_LOCATION=/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar
      - LOGSTASH_JDBC_USERNAME=root
      - LOGSTASH_JDBC_PASSWORD=docker
      - LOGSTASH_ELASTICSEARCH_HOST=http://elasticsearch:9200
    networks:
      - es-net
    deploy:
      resources:
        limits:
          memory: 512M
    volumes:
      - ./mysql-jdbc-input-plugin.conf:/usr/share/logstash/pipeline/logstash.conf
      - ./mysql-connector-java-8.0.30.jar:/usr/share/logstash/logstash-core/lib/jars/mysql-connector-java.jar
    depends_on:
      - elasticsearch
      - kibana
      - mysql
networks:
  es-net:
    driver: bridge